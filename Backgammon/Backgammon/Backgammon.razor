@using WpfBlazor.Enums;

@{
    string lightPointClass = "light-point";
    string darkPointClass = "dark-point";

    string GetPointStyle(int index)
    {
        return index % 2 == 0 ? darkPointClass : lightPointClass;
    }

    void RenderChecker(Color color, int index)
    {
        string style = color == Color.White ? "checker light" : "checker dark";

        <div class="d-flex @(style) justify-content-center"
             style="margin-top: calc(var(--point-height) - @(index + 1) * var(--cheker-size));">
            <div class="inner-@(style) align-self-center"></div>
        </div>
    }
}

<div class="container-fluid py-1 px-3">

    <div class="d-flex flex-row justify-content-center gap-1">

        <div class="d-flex flex-column board-half p-1 gap-1">

            <div class="d-flex flex-row justify-content-center gap-1 mb-5">
                @for (int i = 13; i <= 18; i++)
                {
                    <div class="point down @(GetPointStyle(i))"></div>
                }
            </div>

            <div class="d-flex flex-row justify-content-center gap-1 mt-5">
                @for (int i = 12; i >= 7; i--)
                {
                    int checkersCount = this.board!.BlackCheckersPositions.Count(p => p.PointNumber == i);

                    <div class="point up @(GetPointStyle(i))">
                        @if (checkersCount > 0)
                        {
                            @for (int c = 0; c < Math.Min(checkersCount, 5); c++)
                            {
                                RenderChecker(Color.Black, c);
                            }
                        }
                    </div>
                }
            </div>
        </div>

        <div class="d-flex flex-column board-half p-1 gap-1">

            <div class="d-flex flex-row justify-content-center gap-1 mb-5">
                @for (int i = 19; i <= 24; i++)
                {
                    int checkersCount = this.board!.WhiteCheckersPositions.Count(p => p.PointNumber == i);

                    <div class="point down @(GetPointStyle(i))">
                        @if (checkersCount > 0)
                        {
                            @for (int c = 0; c < Math.Min(checkersCount, 5); c++)
                            {
                                RenderChecker(Color.White, c);
                            }
                        }
                    </div>
                }
            </div>

            <div class="d-flex flex-row justify-content-center gap-1 mt-5">
                @for (int i = 6; i >= 1; i--)
                {
                    <div class="point up @(GetPointStyle(i))"></div>
                }
            </div>

        </div>

    </div>

</div>