@using WpfBlazor.Enums;

@{
    void RenderPoint(int pointNumber, PointSide pointSide)
    {
        int whiteCheckers = this.GetWhiteCheckersCount(pointNumber);
        int blackCheckers = this.GetBlackCheckersCount(pointNumber);

        string pointStyle = GetPointStyle(pointNumber, pointSide);

        <div class="@(pointStyle)">
            @if (whiteCheckers > 0 || blackCheckers > 0)
            {
                Color color = whiteCheckers > blackCheckers ? Color.White : Color.Black;
                int cycleEnd = Math.Min(Math.Max(whiteCheckers, blackCheckers), 5);

                @for (int c = 0; c < cycleEnd; c++)
                {
                    RenderChecker(color, c);
                }
            }
        </div>
    }

    void RenderChecker(Color color, int index)
    {
        string style = GetCheckerStyle(color);

        <div class="d-flex @(style) justify-content-center"
             style="margin-top: calc(var(--point-height) - @(index + 1) * var(--cheker-size));">
            <div class="inner-@(style) align-self-center"></div>
        </div>
    }
}

<div class="container-fluid py-1 px-3">

    <div class="d-flex flex-row justify-content-center gap-1">

        <div class="d-flex flex-column board-half p-1 gap-1">
            <div class="d-flex flex-row justify-content-center gap-1 mb-5">
                @foreach (int point in LeftTopPoints())
                {
                    RenderPoint(point, PointSide.Down);
                }
            </div>
            <div class="d-flex flex-row justify-content-center gap-1 mt-5">
                @foreach (int point in LeftDownPoints())
                {
                    RenderPoint(point, PointSide.Up);
                }
            </div>
        </div>

        <div class="d-flex flex-column board-half p-1 gap-1">
            <div class="d-flex flex-row justify-content-center gap-1 mb-5">
                @foreach (int point in RightTopPoints())
                {
                    RenderPoint(point, PointSide.Down);
                }
            </div>
            <div class="d-flex flex-row justify-content-center gap-1 mt-5">
                @foreach (int point in RightBottomPoints())
                {
                    RenderPoint(point, PointSide.Up);
                }
            </div>
        </div>

    </div>

</div>